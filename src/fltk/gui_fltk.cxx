// generated by Fast Light User Interface Designer (fluid) version 1.0302

#include "gui_fltk.h"
#include "gui.h"

/**
   cb_open_chain_dir
*/
void cb_open_chain_dir(Fl_Widget *w) {
  do_open_chain_dir();
}

/**
   cb_calc_chain_start_btn
*/
void cb_calc_chain_start_btn(Fl_Widget *w) {
  do_calc_chain_start_btn();
}

/**
   cb_calc_chain_pause_btn
*/
void cb_calc_chain_pause_btn(Fl_Widget *w) {
  do_calc_chain_pause_btn();
}

/**
   cb_calc_chain_stop_btn
*/
void cb_calc_chain_stop_btn(Fl_Widget *w) {
  do_calc_chain_stop_btn();
}

/**
   cb_open_chain_file
*/
void cb_open_chain_file(Fl_Widget *w) {
  do_open_chain_file();
}

/**
   cb_open_rainbow_table_rbt_dir
*/
void cb_open_rainbow_table_rbt_dir(Fl_Widget *w) {
  do_open_rainbow_table_rbt_dir();
}

/**
   cb_calc_rainbow_table_merge_btn
*/
void cb_calc_rainbow_table_merge_btn(Fl_Widget *w) {
  do_calc_rainbow_table_merge_btn();
}

/**
   cb_calc_rainbow_table_stop_btn
*/
void cb_calc_rainbow_table_stop_btn(Fl_Widget *w) {
  do_calc_rainbow_table_stop_btn();
}

/**
   cb_open_ts_file
*/
void cb_open_ts_file(Fl_Widget *w) {
  do_open_ts_file();
}

/**
   cb_calc_search_crypt8_start_btn
*/
void cb_calc_search_crypt8_start_btn(Fl_Widget *w) {
  do_calc_search_crypt8_start_btn();
}

/**
   cb_calc_search_crypt8_stop_btn
*/
void cb_calc_search_crypt8_stop_btn(Fl_Widget *w) {
  do_calc_search_crypt8_stop_btn();
}

/**
   cb_open_search_cw_rbt_dir
*/
void cb_open_search_cw_rbt_dir(Fl_Widget *w) {
  do_open_search_cw_rbt_dir();
}

/**
   cb_calc_search_cw_start_btn
*/
void cb_calc_search_cw_start_btn(Fl_Widget *w) {
  do_calc_search_cw_start_btn();
}

/**
   cb_calc_search_cw_stop_btn
*/
void cb_calc_search_cw_stop_btn(Fl_Widget *w) {
  do_calc_search_cw_stop_btn();
}

Fl_Double_Window *fltk_main_window=(Fl_Double_Window *)0;

Fl_Input *chainDir_Filename=(Fl_Input *)0;

Fl_Button *chainDir_Open=(Fl_Button *)0;

#include <FL/Fl_Pixmap.H>
static const char *idata_find_icon[] = {
"15 14 128 2",
"  \tc None",
". \tc #B64E3E",
"+ \tc #BE8D01",
"@ \tc #C0950C",
"# \tc #C18F0D",
"$ \tc #C2910B",
"% \tc #C1970A",
"& \tc #B96737",
"* \tc #F3F3E9",
"= \tc #F3F0CD",
"- \tc #F3EA9C",
"; \tc #F2EA6C",
"> \tc #F2E25F",
", \tc #C39E33",
"\' \tc #F1E139",
") \tc #ECDB21",
"! \tc #C29934",
"~ \tc #F2E706",
"{ \tc #DDBF00",
"] \tc #B6950C",
"^ \tc #977716",
"/ \tc #82611E",
"( \tc #97771A",
"_ \tc #B79A1D",
": \tc #D8BE11",
"< \tc #A06506",
"[ \tc #C29628",
"} \tc #EFD300",
"| \tc #8D6218",
"1 \tc #BBBAA7",
"2 \tc #F1F2EC",
"3 \tc #FDFEFC",
"4 \tc #EAF0EC",
"5 \tc #B0B6A7",
"6 \tc #9C7A35",
"7 \tc #C29D4C",
"8 \tc #C39D48",
"9 \tc #C29D46",
"0 \tc #C29935",
"a \tc #C1931E",
"b \tc #B38D0C",
"c \tc #BEBBA7",
"d \tc #FDFDFB",
"e \tc #F4FCFE",
"f \tc #CBF3FF",
"g \tc #B3ECFE",
"h \tc #E8F9FB",
"i \tc #AAB2A6",
"j \tc #C4AD54",
"k \tc #EEDA65",
"l \tc #EED855",
"m \tc #DCBE3D",
"n \tc #B0681F",
"o \tc #BF8F13",
"p \tc #8F6B19",
"q \tc #EDF1EC",
"r \tc #D1F3FE",
"s \tc #ACE9FF",
"t \tc #84DDFF",
"u \tc #41C5FE",
"v \tc #7ED0FB",
"w \tc #D7E6EA",
"x \tc #9D802E",
"y \tc #EDD546",
"z \tc #EBCF3A",
"A \tc #C69A23",
"B \tc #CE5661",
"C \tc #BB880A",
"D \tc #F0D724",
"E \tc #805F1E",
"F \tc #FBFDFC",
"G \tc #51CFFF",
"H \tc #36C5FF",
"I \tc #20B7FD",
"J \tc #1CA5F8",
"K \tc #1D92F2",
"L \tc #F7FAFB",
"M \tc #826220",
"N \tc #E6BC2A",
"O \tc #E2AF19",
"P \tc #B07C16",
"Q \tc #B88201",
"R \tc #E3BA00",
"S \tc #8B641A",
"T \tc #DEECEC",
"U \tc #7FD3FB",
"V \tc #1CAAF9",
"W \tc #1B9EF6",
"X \tc #1187F0",
"Y \tc #6CADF1",
"Z \tc #CADAE7",
"` \tc #987018",
" .\tc #DB9501",
"..\tc #DA8F00",
"+.\tc #A56B12",
"@.\tc #B37901",
"#.\tc #C99600",
"$.\tc #A57817",
"%.\tc #A6ACA3",
"&.\tc #D9EEF9",
"*.\tc #70BAF5",
"=.\tc #1881ED",
"-.\tc #6BA9F0",
";.\tc #CDE2F6",
">.\tc #989D9E",
",.\tc #6B552A",
"\'.\tc #D27700",
").\tc #C68002",
"!.\tc #B76F39",
"~.\tc #9F6300",
"{.\tc #A57111",
"].\tc #9FA6A2",
"^.\tc #CDDDE8",
"/.\tc #F6F9FB",
"(.\tc #989F9E",
"_.\tc #A9862D",
":.\tc #F0E091",
"<.\tc #605030",
"[.\tc #B57801",
"}.\tc #CC7966",
"|.\tc #725826",
"1.\tc #795B22",
"2.\tc #7D5E1F",
"3.\tc #B08830",
"4.\tc #E0B840",
"5.\tc #A08840",
"6.\tc #403030",
"7.\tc #604820",
"  . + @ # $ %                 ",
"& * * = - ; > %               ",
", * \' \' \' \' \' ) % % % %       ",
"! * ~ { ] ^ / ( _ ) ) : <     ",
"[ = } | 1 2 3 4 5 6 7 8 9 0 < ",
"a - b c d e f g h i j k l m n ",
"o > p q r s t u v w x y z A B ",
"C D E F G H I J K L M N O P   ",
"Q R S T U V W X Y Z `  ...+.  ",
"@.#.$.%.&.*.=.-.;.>.,.\'.).!.  ",
"~.\'.\'.{.].^./.Z (._.:.<.[.    ",
"}.,.,.,.|.1.2.1.,.3.4.:.<.    ",
"                  <.5.4.6.    ",
"                    7.6.      "
};
static Fl_Pixmap image_find_icon(idata_find_icon);

Fl_Button *calcChain_Start=(Fl_Button *)0;

Fl_Button *calcChain_Pause=(Fl_Button *)0;

Fl_Button *calcChain_Stop=(Fl_Button *)0;

Fl_Progress *calcChain_ProgressPart=(Fl_Progress *)0;

Fl_Progress *calcChain_ProgressFile=(Fl_Progress *)0;

Fl_Output *calcChain_speed_output=(Fl_Output *)0;

Fl_Input *chainFile_Filename=(Fl_Input *)0;

Fl_Button *chainFile_Open=(Fl_Button *)0;

static const char *idata_open_icon[] = {
"16 14 134 2",
"  \tc None",
". \tc #8191A6",
"+ \tc #7889A1",
"@ \tc #8795AA",
"# \tc #607495",
"$ \tc #8291A6",
"% \tc #5F7494",
"& \tc #ACA48F",
"* \tc #B6A988",
"= \tc #546B8D",
"- \tc #4F6990",
"; \tc #DAD2A0",
"> \tc #F7F0AB",
", \tc #F9EEA6",
"\' \tc #FBEB9F",
") \tc #AAA18D",
"! \tc #536A8E",
"~ \tc #4F6891",
"{ \tc #4C6793",
"] \tc #ABA28E",
"^ \tc #F6EEA7",
"/ \tc #FDE898",
"( \tc #FBD471",
"_ \tc #A79E89",
": \tc #A39986",
"< \tc #9F9482",
"[ \tc #9A907E",
"} \tc #978C7A",
"| \tc #938877",
"1 \tc #A8A08B",
"2 \tc #F6EAA0",
"3 \tc #FEE898",
"4 \tc #FFDA7A",
"5 \tc #FFD467",
"6 \tc #A59C88",
"7 \tc #F3E69A",
"8 \tc #B9AC8B",
"9 \tc #B7AA8A",
"0 \tc #B3A688",
"a \tc #AFA386",
"b \tc #AA9F83",
"c \tc #A69A81",
"d \tc #A1957F",
"e \tc #9D917C",
"f \tc #998E7A",
"g \tc #958B79",
"h \tc #A39A86",
"i \tc #F2E192",
"j \tc #DEC480",
"k \tc #B0A78E",
"l \tc #FDDE81",
"m \tc #FFE084",
"n \tc #FFDF81",
"o \tc #FFDD7B",
"p \tc #FFD874",
"q \tc #FFD66B",
"r \tc #D1A956",
"s \tc #6F624E",
"t \tc #9F9583",
"u \tc #F1DC89",
"v \tc #FFE28C",
"w \tc #B1A88D",
"x \tc #C7BA8C",
"y \tc #FFD05F",
"z \tc #FFCD54",
"A \tc #FCC54B",
"B \tc #F7BB41",
"C \tc #DBA22E",
"D \tc #6C5E47",
"E \tc #9C9180",
"F \tc #EFD781",
"G \tc #E0C57D",
"H \tc #B0A68C",
"I \tc #FEDD80",
"J \tc #FFD368",
"K \tc #FFD162",
"L \tc #FFCD58",
"M \tc #FCC74E",
"N \tc #F7BE46",
"O \tc #F2B63B",
"P \tc #ECAC31",
"Q \tc #816925",
"R \tc #594414",
"S \tc #988E7D",
"T \tc #ECD279",
"U \tc #ADA48B",
"V \tc #CEC289",
"W \tc #FFD871",
"X \tc #FFD365",
"Y \tc #FFCE5C",
"Z \tc #FEC951",
"` \tc #FAC149",
" .\tc #F5B93F",
"..\tc #EEB034",
"+.\tc #E9A829",
"@.\tc #CD8510",
"#.\tc #5B4B22",
"$.\tc #958A7A",
"%.\tc #D3BE7E",
"&.\tc #AEA48A",
"*.\tc #FFDC7E",
"=.\tc #FFCF5F",
"-.\tc #FFCB55",
";.\tc #FAC44C",
">.\tc #F5BC41",
",.\tc #F0B337",
"\'.\tc #EBAA2E",
").\tc #E5A024",
"!.\tc #D48C13",
"~.\tc #806723",
"{.\tc #302A1B",
"].\tc #928777",
"^.\tc #ABA189",
"/.\tc #D4B26A",
"(.\tc #CD8F00",
"_.\tc #C78C04",
":.\tc #BE8808",
"<.\tc #B4820F",
"[.\tc #A97C15",
"}.\tc #9F771B",
"|.\tc #96721F",
"1.\tc #5B4A21",
"2.\tc #8F8475",
"3.\tc #8F8066",
"4.\tc #877960",
"5.\tc #7B6E57",
"6.\tc #615644",
"7.\tc #524839",
"8.\tc #433A2E",
"9.\tc #352E25",
"0.\tc #29221B",
"a.\tc #1E1914",
"b.\tc #16120E",
"c.\tc #18130E",
"                    . + @       ",
"                  #       $   % ",
"  & & & & & *               = - ",
"& ; > > , \' )             ! ~ { ",
"] ^ > , \' / ( _ : < [ } |       ",
"1 2 , \' 3 4 5 5 5 5 5 5 |       ",
"6 7 \' 3 8 8 9 0 a b c d e f g | ",
"h i / j k l m m m m n o p q r s ",
"t u v w x p 5 5 5 y z A B C D   ",
"E F G H I J 5 K L M N O P Q R   ",
"S T U V W X Y Z `  ...+.@.#.    ",
"$.%.&.*.=.-.;.>.,.\'.).!.~.{.    ",
"].^./.(.(.(._.:.<.[.}.|.1.      ",
"2.3.4.5.s 6.7.8.9.0.a.b.c.      "
};
static Fl_Pixmap image_open_icon(idata_open_icon);

Fl_Input *rbtDir_Filename=(Fl_Input *)0;

Fl_Button *rbtDir_Open=(Fl_Button *)0;

Fl_Progress *addRainbowTable_ProgressFile=(Fl_Progress *)0;

Fl_Button *addRainbowTable_Merge=(Fl_Button *)0;

Fl_Button *addRainbowTable_Stop=(Fl_Button *)0;

Fl_Input *searchCrypt8_Filename=(Fl_Input *)0;

Fl_Button *searchCrypt8_Open=(Fl_Button *)0;

Fl_Input *searchCrypt8_PID=(Fl_Input *)0;

Fl_Input *searchCrypt8_PL_size=(Fl_Input *)0;

Fl_Input *searchCrypt8_File_limit=(Fl_Input *)0;

Fl_Button *searchCrypt8_Start=(Fl_Button *)0;

Fl_Button *searchCrypt8_Stop=(Fl_Button *)0;

Fl_Progress *searchCrypt8_ProgressFile=(Fl_Progress *)0;

Fl_Input *searchCW_Crypt8=(Fl_Input *)0;

Fl_Button *searchCW_Open=(Fl_Button *)0;

Fl_Input *searchCW_RBTDir=(Fl_Input *)0;

Fl_Button *searchCW_Start=(Fl_Button *)0;

Fl_Button *searchCW_Stop=(Fl_Button *)0;

Fl_Input *searchCW_CW=(Fl_Input *)0;

Fl_Output *output_console=(Fl_Output *)0;

Fl_Double_Window* create_fltk_gui() {
  { fltk_main_window = new Fl_Double_Window(475, 815, "CSA-Rainbow-Table-Tool");
    fltk_main_window->color((Fl_Color)16);
    fltk_main_window->labelfont(13);
    { Fl_Group* o = new Fl_Group(5, 18, 465, 133, "Calc Chains");
      o->box(FL_BORDER_BOX);
      o->color((Fl_Color)16);
      o->selection_color((Fl_Color)16);
      o->labelfont(13);
      o->labelsize(11);
      o->labelcolor(FL_GRAY0);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { chainDir_Filename = new Fl_Input(85, 33, 350, 25, "Chain Dir :");
        chainDir_Filename->color((Fl_Color)17);
        chainDir_Filename->selection_color((Fl_Color)16);
        chainDir_Filename->labelfont(13);
        chainDir_Filename->labelsize(11);
        chainDir_Filename->labelcolor(FL_GRAY0);
        chainDir_Filename->textfont(13);
        chainDir_Filename->textcolor(FL_GRAY0);
      } // Fl_Input* chainDir_Filename
      { chainDir_Open = new Fl_Button(437, 32, 30, 25);
        chainDir_Open->image(image_find_icon);
        chainDir_Open->callback((Fl_Callback*)cb_open_chain_dir);
      } // Fl_Button* chainDir_Open
      { calcChain_Start = new Fl_Button(85, 61, 75, 25, "Start");
        calcChain_Start->color((Fl_Color)16);
        calcChain_Start->selection_color((Fl_Color)16);
        calcChain_Start->labelfont(13);
        calcChain_Start->labelsize(11);
        calcChain_Start->labelcolor(FL_GRAY0);
        calcChain_Start->callback((Fl_Callback*)cb_calc_chain_start_btn);
      } // Fl_Button* calcChain_Start
      { calcChain_Pause = new Fl_Button(165, 61, 75, 25, "Pause");
        calcChain_Pause->color((Fl_Color)16);
        calcChain_Pause->selection_color((Fl_Color)16);
        calcChain_Pause->labelfont(13);
        calcChain_Pause->labelsize(11);
        calcChain_Pause->labelcolor(FL_GRAY0);
        calcChain_Pause->callback((Fl_Callback*)cb_calc_chain_pause_btn);
        calcChain_Pause->deactivate();
      } // Fl_Button* calcChain_Pause
      { calcChain_Stop = new Fl_Button(245, 61, 75, 25, "Stop");
        calcChain_Stop->color((Fl_Color)16);
        calcChain_Stop->selection_color((Fl_Color)16);
        calcChain_Stop->labelfont(13);
        calcChain_Stop->labelsize(11);
        calcChain_Stop->labelcolor(FL_GRAY0);
        calcChain_Stop->callback((Fl_Callback*)cb_calc_chain_stop_btn);
        calcChain_Stop->deactivate();
      } // Fl_Button* calcChain_Stop
      { Fl_Box* o = new Fl_Box(15, 86, 45, 25, "Part :");
        o->color((Fl_Color)16);
        o->labelfont(13);
        o->labelsize(11);
        o->labelcolor(FL_GRAY0);
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(17, 99, 45, 25, "File :");
        o->color((Fl_Color)16);
        o->labelfont(13);
        o->labelsize(11);
        o->labelcolor(FL_GRAY0);
      } // Fl_Box* o
      { Fl_Box* o = new Fl_Box(15, 117, 60, 25, "Speed :");
        o->color((Fl_Color)16);
        o->selection_color((Fl_Color)16);
        o->labelfont(13);
        o->labelsize(11);
        o->labelcolor(FL_GRAY0);
      } // Fl_Box* o
      { calcChain_ProgressPart = new Fl_Progress(85, 93, 372, 10);
        calcChain_ProgressPart->color((Fl_Color)16);
        calcChain_ProgressPart->selection_color(FL_SELECTION_COLOR);
      } // Fl_Progress* calcChain_ProgressPart
      { calcChain_ProgressFile = new Fl_Progress(85, 107, 372, 10);
        calcChain_ProgressFile->color((Fl_Color)16);
        calcChain_ProgressFile->selection_color(FL_SELECTION_COLOR);
      } // Fl_Progress* calcChain_ProgressFile
      { calcChain_speed_output = new Fl_Output(85, 118, 370, 25);
        calcChain_speed_output->box(FL_FLAT_BOX);
        calcChain_speed_output->color((Fl_Color)16);
        calcChain_speed_output->selection_color((Fl_Color)16);
        calcChain_speed_output->labeltype(FL_NO_LABEL);
        calcChain_speed_output->labelfont(13);
        calcChain_speed_output->labelsize(11);
        calcChain_speed_output->labelcolor(FL_GRAY0);
        calcChain_speed_output->textsize(11);
        calcChain_speed_output->textcolor(FL_GRAY0);
      } // Fl_Output* calcChain_speed_output
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(5, 165, 465, 129, "Add to Rainbow Table");
      o->box(FL_BORDER_BOX);
      o->color((Fl_Color)16);
      o->selection_color((Fl_Color)16);
      o->labelfont(13);
      o->labelsize(11);
      o->labelcolor(FL_GRAY0);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { Fl_Box* o = new Fl_Box(11, 260, 45, 25, "File :");
        o->color((Fl_Color)16);
        o->labelfont(13);
        o->labelsize(11);
        o->labelcolor(FL_GRAY0);
      } // Fl_Box* o
      { chainFile_Filename = new Fl_Input(85, 171, 350, 25, "Chain File :");
        chainFile_Filename->color((Fl_Color)17);
        chainFile_Filename->selection_color((Fl_Color)16);
        chainFile_Filename->labelfont(13);
        chainFile_Filename->labelsize(11);
        chainFile_Filename->labelcolor(FL_GRAY0);
        chainFile_Filename->textfont(13);
        chainFile_Filename->textsize(11);
        chainFile_Filename->textcolor(FL_GRAY0);
      } // Fl_Input* chainFile_Filename
      { chainFile_Open = new Fl_Button(435, 170, 30, 25);
        chainFile_Open->image(image_open_icon);
        chainFile_Open->callback((Fl_Callback*)cb_open_chain_file);
      } // Fl_Button* chainFile_Open
      { rbtDir_Filename = new Fl_Input(85, 206, 350, 25, "RBT Dir :");
        rbtDir_Filename->color((Fl_Color)17);
        rbtDir_Filename->selection_color((Fl_Color)16);
        rbtDir_Filename->labelfont(13);
        rbtDir_Filename->labelsize(11);
        rbtDir_Filename->labelcolor(FL_GRAY0);
        rbtDir_Filename->textfont(13);
        rbtDir_Filename->textsize(11);
        rbtDir_Filename->textcolor(FL_GRAY0);
      } // Fl_Input* rbtDir_Filename
      { rbtDir_Open = new Fl_Button(435, 205, 30, 25);
        rbtDir_Open->image(image_find_icon);
        rbtDir_Open->callback((Fl_Callback*)cb_open_rainbow_table_rbt_dir);
      } // Fl_Button* rbtDir_Open
      { addRainbowTable_ProgressFile = new Fl_Progress(85, 265, 372, 10);
        addRainbowTable_ProgressFile->color((Fl_Color)16);
        addRainbowTable_ProgressFile->selection_color(FL_SELECTION_COLOR);
        addRainbowTable_ProgressFile->labelfont(13);
        addRainbowTable_ProgressFile->labelsize(11);
      } // Fl_Progress* addRainbowTable_ProgressFile
      { addRainbowTable_Merge = new Fl_Button(85, 234, 75, 25, "Merge");
        addRainbowTable_Merge->color((Fl_Color)16);
        addRainbowTable_Merge->selection_color((Fl_Color)16);
        addRainbowTable_Merge->labelfont(13);
        addRainbowTable_Merge->labelsize(11);
        addRainbowTable_Merge->labelcolor(FL_GRAY0);
        addRainbowTable_Merge->callback((Fl_Callback*)cb_calc_rainbow_table_merge_btn);
      } // Fl_Button* addRainbowTable_Merge
      { addRainbowTable_Stop = new Fl_Button(165, 234, 75, 25, "Stop");
        addRainbowTable_Stop->color((Fl_Color)16);
        addRainbowTable_Stop->selection_color((Fl_Color)16);
        addRainbowTable_Stop->labelfont(13);
        addRainbowTable_Stop->labelsize(11);
        addRainbowTable_Stop->labelcolor(FL_GRAY0);
        addRainbowTable_Stop->callback((Fl_Callback*)cb_calc_rainbow_table_stop_btn);
        addRainbowTable_Stop->deactivate();
      } // Fl_Button* addRainbowTable_Stop
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(5, 309, 465, 186, "Search Crypt8 in TS");
      o->box(FL_BORDER_BOX);
      o->color((Fl_Color)16);
      o->selection_color((Fl_Color)16);
      o->labelfont(13);
      o->labelsize(11);
      o->labelcolor(FL_GRAY0);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { Fl_Box* o = new Fl_Box(10, 311, 455, 25, "Search duplicate crypted payload in TS and show the first 8 bytes (Crypt8) of\
 the payload");
        o->color((Fl_Color)16);
        o->selection_color((Fl_Color)16);
        o->labelfont(13);
        o->labelsize(10);
        o->labelcolor(FL_GRAY0);
      } // Fl_Box* o
      { searchCrypt8_Filename = new Fl_Input(85, 333, 350, 25, "TS file :");
        searchCrypt8_Filename->color((Fl_Color)17);
        searchCrypt8_Filename->selection_color((Fl_Color)16);
        searchCrypt8_Filename->labelfont(13);
        searchCrypt8_Filename->labelsize(11);
        searchCrypt8_Filename->labelcolor(FL_GRAY0);
        searchCrypt8_Filename->textfont(13);
        searchCrypt8_Filename->textsize(11);
        searchCrypt8_Filename->textcolor(FL_GRAY0);
      } // Fl_Input* searchCrypt8_Filename
      { searchCrypt8_Open = new Fl_Button(435, 332, 30, 25);
        searchCrypt8_Open->image(image_open_icon);
        searchCrypt8_Open->callback((Fl_Callback*)cb_open_ts_file);
      } // Fl_Button* searchCrypt8_Open
      { searchCrypt8_PID = new Fl_Input(85, 359, 85, 25, "PID :");
        searchCrypt8_PID->color((Fl_Color)17);
        searchCrypt8_PID->selection_color((Fl_Color)16);
        searchCrypt8_PID->labelfont(13);
        searchCrypt8_PID->labelsize(11);
        searchCrypt8_PID->labelcolor(FL_GRAY0);
        searchCrypt8_PID->textfont(13);
        searchCrypt8_PID->textsize(11);
        searchCrypt8_PID->textcolor(FL_GRAY0);
      } // Fl_Input* searchCrypt8_PID
      { Fl_Box* o = new Fl_Box(175, 359, 281, 25, "dec. (empty for all PIDs)");
        o->color((Fl_Color)16);
        o->labelfont(13);
        o->labelsize(11);
        o->labelcolor(FL_GRAY0);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { searchCrypt8_PL_size = new Fl_Input(85, 386, 85, 25, "PL size :");
        searchCrypt8_PL_size->color((Fl_Color)17);
        searchCrypt8_PL_size->selection_color((Fl_Color)16);
        searchCrypt8_PL_size->labelfont(13);
        searchCrypt8_PL_size->labelsize(11);
        searchCrypt8_PL_size->labelcolor(FL_GRAY0);
        searchCrypt8_PL_size->textfont(13);
        searchCrypt8_PL_size->textsize(11);
        searchCrypt8_PL_size->textcolor(FL_GRAY0);
      } // Fl_Input* searchCrypt8_PL_size
      { Fl_Box* o = new Fl_Box(175, 386, 281, 25, "dec. (empty for a payload of 184 bytes)");
        o->color((Fl_Color)16);
        o->labelfont(13);
        o->labelsize(11);
        o->labelcolor(FL_GRAY0);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { searchCrypt8_File_limit = new Fl_Input(85, 413, 85, 25, "File limit :");
        searchCrypt8_File_limit->color((Fl_Color)17);
        searchCrypt8_File_limit->selection_color((Fl_Color)16);
        searchCrypt8_File_limit->labelfont(13);
        searchCrypt8_File_limit->labelsize(11);
        searchCrypt8_File_limit->labelcolor(FL_GRAY0);
        searchCrypt8_File_limit->textfont(13);
        searchCrypt8_File_limit->textsize(11);
        searchCrypt8_File_limit->textcolor(FL_GRAY0);
      } // Fl_Input* searchCrypt8_File_limit
      { Fl_Box* o = new Fl_Box(175, 413, 281, 25, "MByte (limit search - empty for 4096 MByte)");
        o->color((Fl_Color)16);
        o->labelfont(13);
        o->labelsize(11);
        o->labelcolor(FL_GRAY0);
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
      } // Fl_Box* o
      { searchCrypt8_Start = new Fl_Button(85, 439, 75, 25, "Start");
        searchCrypt8_Start->color((Fl_Color)16);
        searchCrypt8_Start->selection_color((Fl_Color)16);
        searchCrypt8_Start->labelfont(13);
        searchCrypt8_Start->labelsize(11);
        searchCrypt8_Start->labelcolor(FL_GRAY0);
        searchCrypt8_Start->callback((Fl_Callback*)cb_calc_search_crypt8_start_btn);
      } // Fl_Button* searchCrypt8_Start
      { searchCrypt8_Stop = new Fl_Button(165, 439, 75, 25, "Stop");
        searchCrypt8_Stop->color((Fl_Color)16);
        searchCrypt8_Stop->selection_color((Fl_Color)16);
        searchCrypt8_Stop->labelfont(13);
        searchCrypt8_Stop->labelsize(11);
        searchCrypt8_Stop->labelcolor(FL_GRAY0);
        searchCrypt8_Stop->callback((Fl_Callback*)cb_calc_search_crypt8_stop_btn);
      } // Fl_Button* searchCrypt8_Stop
      { Fl_Box* o = new Fl_Box(37, 464, 45, 25, "File :");
        o->color((Fl_Color)16);
        o->labelfont(13);
        o->labelsize(11);
        o->labelcolor(FL_GRAY0);
      } // Fl_Box* o
      { searchCrypt8_ProgressFile = new Fl_Progress(85, 472, 372, 10);
        searchCrypt8_ProgressFile->color((Fl_Color)16);
        searchCrypt8_ProgressFile->selection_color(FL_SELECTION_COLOR);
      } // Fl_Progress* searchCrypt8_ProgressFile
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(5, 514, 465, 138, "Search CW");
      o->box(FL_BORDER_BOX);
      o->color((Fl_Color)16);
      o->selection_color((Fl_Color)16);
      o->labelfont(13);
      o->labelsize(11);
      o->labelcolor(FL_GRAY0);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { searchCW_Crypt8 = new Fl_Input(85, 525, 381, 25, "Crypt8 :");
        searchCW_Crypt8->color((Fl_Color)17);
        searchCW_Crypt8->selection_color((Fl_Color)16);
        searchCW_Crypt8->labelfont(13);
        searchCW_Crypt8->labelsize(11);
        searchCW_Crypt8->labelcolor(FL_GRAY0);
        searchCW_Crypt8->textfont(13);
        searchCW_Crypt8->textsize(11);
        searchCW_Crypt8->textcolor(FL_GRAY0);
      } // Fl_Input* searchCW_Crypt8
      { searchCW_Open = new Fl_Button(436, 554, 30, 25);
        searchCW_Open->image(image_open_icon);
        searchCW_Open->callback((Fl_Callback*)cb_open_search_cw_rbt_dir);
      } // Fl_Button* searchCW_Open
      { searchCW_RBTDir = new Fl_Input(85, 555, 350, 25, "RBT Dir :");
        searchCW_RBTDir->color((Fl_Color)17);
        searchCW_RBTDir->selection_color((Fl_Color)16);
        searchCW_RBTDir->labelfont(13);
        searchCW_RBTDir->labelsize(11);
        searchCW_RBTDir->labelcolor(FL_GRAY0);
        searchCW_RBTDir->textfont(13);
        searchCW_RBTDir->textsize(11);
        searchCW_RBTDir->textcolor(FL_GRAY0);
      } // Fl_Input* searchCW_RBTDir
      { searchCW_Start = new Fl_Button(85, 585, 75, 25, "Start");
        searchCW_Start->color((Fl_Color)16);
        searchCW_Start->selection_color((Fl_Color)16);
        searchCW_Start->labelfont(13);
        searchCW_Start->labelsize(11);
        searchCW_Start->labelcolor(FL_GRAY0);
        searchCW_Start->callback((Fl_Callback*)cb_calc_search_cw_start_btn);
      } // Fl_Button* searchCW_Start
      { searchCW_Stop = new Fl_Button(164, 585, 75, 25, "Stop");
        searchCW_Stop->color((Fl_Color)16);
        searchCW_Stop->selection_color((Fl_Color)16);
        searchCW_Stop->labelfont(13);
        searchCW_Stop->labelsize(11);
        searchCW_Stop->labelcolor(FL_GRAY0);
        searchCW_Stop->callback((Fl_Callback*)cb_calc_search_cw_stop_btn);
      } // Fl_Button* searchCW_Stop
      { searchCW_CW = new Fl_Input(85, 614, 381, 25, "CW :");
        searchCW_CW->color((Fl_Color)17);
        searchCW_CW->selection_color((Fl_Color)16);
        searchCW_CW->labelfont(13);
        searchCW_CW->labelsize(11);
        searchCW_CW->labelcolor(FL_GRAY0);
        searchCW_CW->textfont(13);
        searchCW_CW->textsize(11);
        searchCW_CW->textcolor(FL_GRAY0);
      } // Fl_Input* searchCW_CW
      o->end();
    } // Fl_Group* o
    { output_console = new Fl_Output(5, 658, 465, 150);
      output_console->color((Fl_Color)17);
      output_console->selection_color((Fl_Color)17);
      output_console->labelfont(13);
      output_console->labelsize(11);
      output_console->labelcolor(FL_GRAY0);
      output_console->textfont(13);
      output_console->textsize(11);
      output_console->textcolor(FL_GRAY0);
      output_console->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
    } // Fl_Output* output_console
    fltk_main_window->end();
  } // Fl_Double_Window* fltk_main_window
  return fltk_main_window;
}
